version: '3.9'

services:
  front:
    container_name: prod_front
    build:
      context: ./services/front
      args:
        - BACKEND_URL=$BACKEND_URL
    volumes:
      - './services/front:/app'
      - '/app/node_modules'
      # - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8000:80

  fit_v1:
    container_name: prod_fit_v1
    build:
      context: ./services/fit_v1
      args:
        - BACKEND_URL=$BACKEND_URL
    volumes:
      - './services/fit_v1:/app'
      - '/fit_v1_app/node_modules:/app/node_modules'
      # - ./nginx.conf:/etc/nginx/nginx.conf
    env_file:
      - .env
    ports:
      - 8002:80

  adminka:
    container_name: prod_adminka
    build:
      context: ./services/adminka
      args:
        - BACKEND_URL=$BACKEND_URL
    # volumes:
      # - './services/adminka:/app'
      # - '/adminka_app/node_modules'
      # - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8001:80

  back:
    container_name: prod_back
    build: ./services/back
    command: [ "/scripts/app.sh" ]
    volumes:
      - .:/fastapi_app
      - prod_logs_volume:/appLogs
    # command: [ "/src/docker/app.sh" ]
    env_file:
      - .env
    ports:
      - "8010:8000"
    depends_on:
      - db_fit

  db_fit:
    image: postgres:15.1
    container_name: prod_pg_fit
    ports:
      - 5440:5432
    environment:
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_fit_data:/var/lib/postgresql/data/
    env_file:
      - .env

  elasticsearch:
    container_name: prod-elasticsearch
    build:
      context: ./services/monitoring/elasticsearch/
    volumes:
      - type: volume
        source: prod.elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: xtGwEuXJ
      discovery.type: single-node
    networks:
      - prod_elk_stack

  logstash:
    container_name: prod_logstash
    build:
      context: ./services/monitoring/logstash/
      dockerfile: Dockerfile.prod
    ports:
      - "5000:5000"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    volumes:
      - prod_logs_volume:/usr/share/logstash/logs
    networks:
      - prod_elk_stack
    depends_on:
      - elasticsearch

  kibana:
    container_name: prod_kibana
    build:
      context: ./services/monitoring/kibana/
      dockerfile: Dockerfile.prod
    ports:
      - "5601:5601"
    networks:
      - prod_elk_stack
    depends_on:
      - elasticsearch

volumes:
  postgres_fit_data:
  prod.elasticsearch:
  prod_logs_volume:

networks:
  default:
    name: fitness
    external: true
  prod_elk_stack:
    driver: bridge